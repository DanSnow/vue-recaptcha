[{"data":1,"prerenderedAt":134},["ShallowReactive",2],{"search-api":3},[4,11,21,31,40,46,55,64,74,83,90,98,108,115,124],{"id":5,"path":6,"dir":7,"title":8,"description":7,"keywords":9,"body":10},"content:0.index.md","/","","vue-recaptcha document",[],"    vue-recaptcha   Make Google's reCAPTCHA easy to use in Vue.js/Nuxt.js           \u003C  template  >\n       \u003C  Checkbox   />\n     \u003C/  template  >\n    What's included      reCAPTCHA v2   The \"I'm not a robot\" checkbox    reCAPTCHA v3   Determinate if user is human without interrupt the user flow    Nuxt integration   Use reCAPTCHA in Nuxt.js  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":12,"path":13,"dir":7,"title":14,"description":7,"keywords":15,"body":20},"content:1.guide:0.index.md","/guide","Get started",[16,17,18,19],"Installation","Setup vue-recaptcha plugin","Provide reCAPTCHA script","Usage without unhead","  Get started   From vue-recaptcha v2? v3 is a complete rewrite, please check out   migration guide  Let's get started with vue-recaptcha.  What is vue-recaptcha  vue-recaptcha is just a wrapper to provide an easier interface for   Google's reCAPTCHA    component that is easy to use  composable to integrate into your own app  vue-recaptcha is not for:    customize reCAPTCHA UI  provide features that is not implemented by Google reCATPCHA, like change language on the fly  Installation         Setup vue-recaptcha plugin   By default, vue-recaptcha use   @unhead/vue  to inject the reCAPTCHA script, if you are not using   @unhead/vue  or   @vueuse/head , please check out   Usage without unhead     import   { VueRecaptchaPlugin }   from   'vue-recaptcha'\n   \n   const   app   =   createApp  (App)\n   app.  use  (VueRecaptchaPlugin, {\n     v2SiteKey:   'YOUR_V2_SITEKEY_HERE'  ,\n     v3SiteKey:   'YOUR_V3_SITEKEY_HERE'  ,\n   })\n  Please replace   YOUR_V2_SITEKEY_HERE  and   YOUR_V3_SITEKEY_HERE  with your keys. If you don't have one, please go to   here  and apply one  Not both of the sitekey is required, if you only need reCAPTCHA v2, just provide the   v2SiteKey  In this document, if you see   v2  which means you'll need to pass   v2SiteKey  and   v3  means you'll need   v3SiteKey  If you did't provide the corresponding site key, you'll get a runtime error  Provide reCAPTCHA script  To load the reCAPTCHA script, you will need to call   useRecaptchaProvider  in your   app.vue     \u003C  script   setup   lang  =  \"ts\"  >\n   import   { useRecaptchaProvider }   from   'vue-recaptcha'\n   \n   useRecaptchaProvider  ()\n   \u003C/  script  >\n   \n   \u003C  template  >\n     \u003C  div   id  =  \"app\"  >\n       \u003C  router-view   />\n     \u003C/  div  >\n   \u003C/  template  >\n  That's all, now you can start using vue-recaptcha. Please see   components  for quick introduce for all of the components  Go to component overview  Usage without unhead  If you are not using   @unhead/vue  or   @vueuse/head , you can simply import the plugin from   vue-recaptcha/head     import   { VueRecaptchaPlugin }   from   'vue-recaptcha/head'\n   \n   const   app   =   createApp  (App)\n   app.  use  (VueRecaptchaPlugin, {\n     v2SiteKey:   'YOUR_V2_SITEKEY_HERE'  ,\n     v3SiteKey:   'YOUR_V3_SITEKEY_HERE'  ,\n   })\n  With this version, it will inject the reCAPTCHA script by simply creating a   script  tag in document   head  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":22,"path":23,"dir":24,"title":25,"description":7,"keywords":26,"body":30},"content:1.guide:1.nuxt.md","/guide/nuxt","guide","Nuxt",[27,28,29],"Options","Enterprise","Manually Install Plugin","  Nuxt   When using vue-recaptcha in Nuxt, please try to utilize Nuxt's auto import feature as much as possible to avoid potential bugs.  vue-recaptcha supports Nuxt.js out of the box.     defineNuxtConfig  ({\n     modules: [  'vue-recaptcha/nuxt'  ],\n   })\n   Please noticed that to prevent from conflict with your components, vue-recaptcha's Nuxt integration has renaming the following components \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Original name   Renamed to     Checkbox   RecaptchaCheckbox    ChallengeV2   RecaptchaChallengeV2    ChallengeV3   RecaptchaChallengeV3  Options  You can pass options to the module by adding a   recaptcha  key to your   nuxt.config.js  file in   runtimeConfig.public .     defineNuxtConfig  ({\n     modules: [  'vue-recaptcha/nuxt'  ],\n     runtimeConfig: {\n       public: {\n         recaptcha: {\n           v2SiteKey:   'YOUR_V2_SITEKEY_HERE'  ,\n           v3SiteKey:   'YOUR_V3_SITEKEY_HERE'  ,\n         },\n       },\n     },\n   })\n  Enterprise  If you are using reCAPTCHA Enterprise, you can use the   recaptcha  key in   nuxt.config  to enable the enterprise version support.   Enterprise version support is experimental and may be changed in the future.     defineNuxtConfig  ({\n     modules: [  'vue-recaptcha/nuxt'  ],\n     runtimeConfig: {\n       public: {\n         recaptcha: {\n           v2SiteKey:   'YOUR_V2_SITEKEY_HERE'  ,\n           v3SiteKey:   'YOUR_V3_SITEKEY_HERE'  ,\n         },\n       },\n     },\n     recaptcha: {\n       enterprise:   true  ,\n     },\n   })\n  Manually Install Plugin  If you want to take full control of the plugin, you can manually install the plugin by adding the following code to your   nuxt.config.js  file.     defineNuxtConfig  ({\n     modules: [  'vue-recaptcha/nuxt'  ],\n     runtimeConfig: {\n       public: {\n         recaptcha: {\n           v2SiteKey:   'YOUR_V2_SITEKEY_HERE'  ,\n           v3SiteKey:   'YOUR_V3_SITEKEY_HERE'  ,\n         },\n       },\n     },\n     recaptcha: {\n       plugin:   false  ,\n     },\n   })\n  Then you will need to manually set up the plugin by creating a file named   recaptcha.ts  in your   plugins  directory.     import   VueRecaptchaPlugin   from   'vue-recaptcha'\n   \n   export   default   defineNuxtPlugin  (({   vueApp   })   =>   {\n     const   {\n       public  : {   recaptcha   },\n     }   =   useRuntimeConfig  ()\n     vueApp.  use  (VueRecaptchaPlugin, recaptcha)\n   })\n  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":32,"path":33,"dir":24,"title":34,"description":7,"keywords":35,"body":39},"content:1.guide:2.migration.md","/guide/migration","Migration from v2",[36,37,38],"1. set up the plugin","2. Provide reCAPTCHA script","3. Use the components","  Migration from v2  1. set up the plugin  V3 need you to set up a Vue plugin before start using.     import   { VueRecaptchaPlugin }   from   'vue-recaptcha'\n   \n   const   app   =   createApp  (App)\n   app.  use  (VueRecaptchaPlugin, {\n     v2SiteKey:   'YOUR_SITE_KEY_HERE'\n   })\n  2. Provide reCAPTCHA script  To load the reCAPTCHA script, you will need to call   useRecaptchaProvider  in your   app.vue     \u003C  script   setup   lang  =  \"ts\"  >\n   import   { useRecaptchaProvider }   from   'vue-recaptcha'\n   \n   useRecaptchaProvider  ()\n   \u003C/  script  >\n  3. Use the components  Now you can start using the components  If you are using the \"I'm not a robot\" checkbox, please use the   \u003CCheckbox />     \u003C  template  >\n     \u003C  Checkbox   v-model  =  \"  response  \"   />\n   \u003C/  template  >\n  You can read more at   here  If you are using the invisible reCAPTCHA, please use the   \u003CChallengeV2 />     \u003C  template  >\n     \u003C  ChallengeV2   v-model  =  \"  response  \"  >\n       \u003C  button  >submit\u003C/  button  >\n     \u003C/  ChallengeV2  >\n   \u003C/  template  >\n  You can read more at   here  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":41,"path":42,"dir":24,"title":43,"description":7,"keywords":44,"body":45},"content:1.guide:3.enterprise.md","/guide/enterprise","Enterprise reCAPTCHA Support",[19,25],"  Enterprise reCAPTCHA Support   Enterprise version support is experimental and may be changed in the future.  Simply change your plugin import to the following:     import   VueRecaptchaPlugin   from   'vue-recaptcha/enterprise'\n   \n   const   app   =   createApp  (App)\n   app.  use  (VueRecaptchaPlugin)\n  Usage without unhead  If you are not using   unhead  and want to use the enterprise version, you can use the following code:     import   VueRecaptchaPlugin   from   'vue-recaptcha/enterprise-head'\n   \n   const   app   =   createApp  (App)\n   app.  use  (VueRecaptchaPlugin)\n  Nuxt  If you are using Nuxt, you can set the   recaptcha.enterprise  option to   true :     defineNuxtConfig  ({\n     modules: [  'vue-recaptcha/nuxt'  ],\n     runtimeConfig: {\n       public: {\n         recaptcha: {\n           v2SiteKey:   'YOUR_V2_SITEKEY_HERE'  ,\n           v3SiteKey:   'YOUR_V3_SITEKEY_HERE'  ,\n         },\n       },\n     },\n     recaptcha: {\n       enterprise:   true  ,\n     },\n   })\n  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":47,"path":48,"dir":24,"title":49,"description":7,"keywords":50,"body":54},"content:1.guide:4.faq.md","/guide/faq","FAQ",[51,52,53],"What is \"ReCAPTCHA couldn't find user-provided function: __vueRecaptchaLoaded\"?","How to test vue-recaptcha?","How about an e2e testing (or integration testing)?","  FAQ  What is \"ReCAPTCHA couldn't find user-provided function:   __vueRecaptchaLoaded \"?  It's because google's recaptcha have been loaded before your app. You can simply ignore it because vue-recaptcha can still detect and render recaptcha. If you care about this, try to move the script tag of recatpcha after to your app.  How to test vue-recaptcha?  You can mock   window.grecaptcha  to bypass google's recaptcha.  How about an e2e testing (or integration testing)?  Please reference to   recaptcha's FAQ .",{"id":56,"path":57,"dir":7,"title":58,"description":7,"keywords":59,"body":63},"content:2.components:0.index.md","/components","Overview",[60,61,62],"Checkbox v2","ChallengeV2 v2","ChallengeV3 v3","  Overview   Checkbox    v2  The most basic form of the reCAPTCHA        \u003C  template  >\n     \u003C  Checkbox   />\n   \u003C/  template  >\n  Go to document   ChallengeV2    v2  Invisible reCAPTCHA.  Go to document   ChallengeV3    v3  reCAPTCHA v3  Go to document  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":65,"path":66,"dir":67,"title":68,"description":69,"keywords":70,"body":73},"content:2.components:1.checkbox.md","/components/checkbox","components","Checkbox","Insert reCAPTCHA v2 checkbox",[71,72],"Props","v-model","  Checkbox   v2  Insert reCAPTCHA v2 checkbox        \u003C  script   setup   lang  =  \"ts\"  >\n   const   theme   =   ref  \u003C  'light'   |   'dark'  >(  'light'  )\n   const   response   =   ref  ()\n   \u003C/  script  >\n   \n   \u003C  template  >\n     \u003C  div  >\n       \u003C  ThemeButton   v-model  =  \"  theme  \"   @  click  =  \"  response   =   ''\"   />\n       \u003C  div  >{{ response   ?   'Verified'   :   'Please click the checkbox'   }}\u003C/  div  >\n       \u003C  Checkbox   :  key  =  \"  theme  \"   v-model  =  \"  response  \"   :  theme  =  \"  theme  \"   />\n     \u003C/  div  >\n   \u003C/  template  >\n  Props \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      key   type   default   description     as  string   'div'  What element to render    theme   'light' | 'dark'   'light'  Theme for reCAPTCHA checkbox    size   'normal' | 'compact'   'normal'  Size for the reCAPTCHA checkbox   v-model \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      key   type   description     modelValue  string  The reCAPTCHA response    widgetId  string  Widget id for reCAPTCHA checkbox  About   modelValue  You can set   modelValue  to   null  or empty string to reset reCAPTCHA checkbox.  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":75,"path":76,"dir":67,"title":77,"description":78,"keywords":79,"body":82},"content:2.components:2.challenge-v2.md","/components/challenge-v2","ChallengeV2","Create invisible reCAPTCHA v2",[71,72,80,81],"About the visible Badge for invisible reCAPTCHA","Slots","  ChallengeV2   v2  Create invisible reCAPTCHA v2        \u003C  script   setup   lang  =  \"ts\"  >\n   import   { RecaptchaV2State }   from   '#recaptcha'\n   \n   const   map   =   {\n     [RecaptchaV2State.Init]:   'Click to Challenge'  ,\n     [RecaptchaV2State.Verified]:   'Verified'  ,\n     [RecaptchaV2State.Expired]:   'Expired'  ,\n     [RecaptchaV2State.Error]:   'Error'  ,\n   }\n   \n   const   response   =   ref  ()\n   \u003C/  script  >\n   \n   \u003C  template  >\n     \u003C  ChallengeV2   v-slot  =  \"  { state }  \"   v-model  =  \"  response  \"  >\n       \u003C  PrimaryButton  >{{ map[state] }}{{ response   ?   ` ${  response  .  slice  (  0  ,   6  )  }...`   :   ''   }}\u003C/  PrimaryButton  >\n     \u003C/  ChallengeV2  >\n   \u003C/  template  >\n  Props \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      key   type   default   description     as  string   'div'  What element to render    badge  `'bottomright'  'bottomleft'  'inline'`    autoExecute  boolean   true  Should vue-recaptcha execute challenge on click, if you set it to   false  you'll need  to call the   execute  method in the slot   v-model \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      key   type   description     modelValue  string  The reCAPTCHA response    widgetId  string  Widget id for reCAPTCHA checkbox  About   modelValue  You can set   modelValue  to   null  or empty string to reset reCAPTCHA checkbox.  About the visible Badge for invisible reCAPTCHA  You should be able to see the reCAPTCHA badge in the bottom right corner of this page. It is a mark displayed by Google when you use invisible reCAPTCHA. You can add the following CSS code to hide it.     .grecaptcha-badge   {   visibility  :   hidden  ; }\n  Please note that, according to Google's requirements, you will need to explicitly state that you are using reCAPTCHA. For more information, you can refer to this   link  Slots  default  This is the position that usually place a your submit button. When click on the content,   ChallengeV2  will automatically execute the reCAPTCHA challenge by default  Slot API     interface   SlotApi   {\n     /**\n      * widget id\n      */\n     widgetId  :   WidgetID   |   undefined\n     /**\n      * reCAPTCHA state\n      */\n     state  :   RecaptchaV2State\n   \n     isError  :   boolean\n     isExpired  :   boolean\n     isVerified  :   boolean\n   \n     /**\n      * reset reCAPTCHA\n      */\n     reset  :   ()   =>   void\n     /**\n      * execute challenge\n      */\n     execute  :   ()   =>   void\n   }\n   RecaptchaV2State     export   enum   RecaptchaV2State   {\n     Init   =   'init'  ,\n     Verified   =   'verified'  ,\n     Expired   =   'expired'  ,\n     Error   =   'error'  ,\n   }\n   flowchart TD\nInit -->|Challenge| Verified\nInit -->|Challenge| Error\nVerified -->|Challenge expired| Expired\nError -->|Reset| Init\nVerified -->|Reset| Init\nExpired -->|Reset| Init  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":84,"path":85,"dir":67,"title":86,"description":87,"keywords":88,"body":89},"content:2.components:3.challenge-v3.md","/components/challenge-v3","ChallengeV3","Create reCAPTCHA v3 challenge",[71,72,81],"  ChallengeV3   v3  Create reCAPTCHA v3 challenge        \u003C  script   lang  =  \"ts\"   setup  >\n   const   response   =   ref  ()\n   \u003C/  script  >\n   \n   \u003C  template  >\n     \u003C  div  >\n       \u003C  ChallengeV3   v-model  =  \"  response  \"   action  =  \"submit\"  >\n         \u003C  PrimaryButton  >{{ response   ?   `Get response: ${  response  .  slice  (  0  ,   6  )  }...`   :   'click me'   }}\u003C/  PrimaryButton  >\n       \u003C/  ChallengeV3  >\n     \u003C/  div  >\n   \u003C/  template  >\n  Props \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      key   type   default   description     action  string   The   action  for reCAPTCHA v3    as  string   'div'  What element to render    autoExecute  boolean   true  Should vue-recaptcha execute challenge on click, if you set it to   false  you'll need  to call the   execute  method in the slot   v-model \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      key   type   description     modelValue  string  The reCAPTCHA response  Slots  default  This is the position that usually place a your submit button. When click on the content,   ChallengeV3  will automatically execute the reCAPTCHA challenge by default  Slot API     interface   SlotApi   {\n     /**\n      * reCAPTCHA v3 response\n      */\n     response  :   string   |   undefined\n     /**\n      * execute reCAPTCHA v3 challenge\n      */\n     execute  :   ()   =>   Promise  \u003C  string  >\n   }\n  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":91,"path":92,"dir":93,"title":94,"description":95,"keywords":96,"body":97},"content:3.composables:0.recaptcha-provider.md","/composables/recaptcha-provider","composables","useRecaptchaProvider","The function that setup the required scripts for reCAPTCHA. It must be called in your app, or vue-recaptcha won't work.",[],"  useRecaptchaProvider  The function that setup the required scripts for reCAPTCHA. It must be called in your app, or vue-recaptcha won't work.     \u003C  script   setup   lang  =  \"ts\"  >\n   import   { useRecaptchaProvider }   from   'vue-recaptcha'\n   \n   useRecaptchaProvider  ()\n   \u003C/  script  >\n  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":99,"path":100,"dir":93,"title":101,"description":7,"keywords":102,"body":107},"content:3.composables:1.challenge-v2.md","/composables/challenge-v2","useChallengeV2",[103,104,105,80,106],"Description","Input","Return","Examples","  useChallengeV2   v2  Description  A composable to help you mount the reCAPTCHA checkbox or invisible reCAPTCHA  Input     interface   RecaptchaV2CheckboxOptionsInput   {\n     theme  ?:   'dark'   |   'light'\n     size  ?:   'compact'   |   'normal'\n     tabindex  ?:   string\n   }\n   \n   interface   RecaptchaV2InvisibleOptionsInput   {\n     badge  ?:   'bottomright'   |   'bottomleft'   |   'inline'\n     size  :   'invisible'\n     tabindex  ?:   string\n   }\n   \n   export   interface   UseChallengeV2Input   {\n     /**\n      * root to mount reCAPTCHA\n      */\n     root  ?:   MaybeComputedRef  \u003C  Element   |   undefined  >\n     /**\n      * Option that pass to reCAPTCHA render\n      */\n     options  ?:   RecaptchaV2OptionsInput\n   }\n  Return     export   interface   UseChallengeV2Return   {\n     /**\n      * root element ref to mount reCAPTCHA\n      */\n     root  :   Ref  \u003C  Element   |   undefined  >\n     /**\n      * reCAPTCHA widget id\n      */\n     widgetID  :   Ref  \u003C  WidgetID   |   undefined  >\n   \n     /**\n      * state of reCAPTCHA\n      */\n     state  :   Ref  \u003C  RecaptchaV2State  >\n   \n     /**\n      * the verified event\n      */\n     onVerify  :   EventHookOn  \u003C  string  >\n     /**\n      * the expired event\n      */\n     onExpired  :   EventHookOn  \u003C  void  >\n     /**\n      * the error event\n      */\n     onError  :   EventHookOn  \u003C  Error  >\n   \n     /**\n      * execute the challenge\n      */\n     execute  :   ()   =>   void\n     /**\n      * reset reCAPTCHA\n      */\n     reset  :   ()   =>   void\n   }\n  About the   state  please see   here  for more details  Please see   reCAPTCHA docs  for more information about the options.  About the visible Badge for invisible reCAPTCHA  You should be able to see the reCAPTCHA badge in the bottom right corner of this page. It is a mark displayed by Google when you use invisible reCAPTCHA. You can add the following CSS code to hide it.     .grecaptcha-badge   {   visibility  :   hidden  ; }\n  Please note that, according to Google's requirements, you will need to explicitly state that you are using reCAPTCHA. For more information, you can refer to this   link  Examples  Checkbox     \u003C  script  >\n   import   { useChallengeV2 }   from   'vue-recaptcha'\n   \n   const   {   root  ,   onVerify   }   =   useChallengeV2  ({\n     options: {\n       theme:   'light'  ,\n       size:   'normal'  ,\n     }\n   })\n   \n   onVerify  ((  response  )   =>   {\n     // do something with response\n     console.  log  (response)\n   })\n   \u003C/  script  >\n   \n   \u003C  template  >\n     \u003C  div   ref  =  \"root\"   /  >\n   \u003C/  template  >\n  Invisible reCAPTCHA     \u003C  script  >\n   import   { useChallengeV2 }   from   'vue-recaptcha'\n   \n   const   {   root  ,   execute  ,   onVerify   }   =   useChallengeV2  ({\n     options: {\n       // It's important to pass `size: 'invisible'` to render a invisible reCAPTCHA\n       size:   'invisible'  ,\n     }\n   })\n   \n   onVerify  ((  response  )   =>   {\n     // do something with response\n     console.  log  (response)\n   })\n   \u003C/  script  >\n   \n   \u003C  template  >\n     \u003C  div  >\n       \u003C  button   @  click  =  \"  execute  \"  >\n         submit\n       \u003C/  button  >\n       \u003C!-- You must give an empty div to render the invisible reCAPTCHA -->\n       \u003C  div   ref  =  \"root\"   /  >\n     \u003C/  div  >\n   \u003C/  template  >\n  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":109,"path":110,"dir":93,"title":111,"description":7,"keywords":112,"body":114},"content:3.composables:2.challenge-v3.md","/composables/challenge-v3","useChallengeV3",[103,104,105,113],"Usage","  useChallengeV3   v3  Description  A composable to help you execute the reCAPTCHA v3 challenge  Input    action : The action for reCAPTCHA v3  Return     export   interface   UseChallengeV3Return   {\n     /**\n      * reCAPTCHA v3 response as ref\n      */\n     response  :   Ref  \u003C  string   |   undefined  >\n     /**\n      * Execute the challenge\n      *   @returns   response for reCAPTCHA v3\n      */\n     execute  :   ()   =>   Promise  \u003C  string  >\n   }\n  Usage     \u003C  script   lang  =  \"ts\"   setup  >\n   import   { useChallengeV3 }   from   'vue-recaptcha'\n   \n   const   {   execute   }   =   useChallengeV3  (  'submit'  )\n   \n   async   function   onSubmit  () {\n     const   response   =   await   execute  ()\n   \n     // do something with response\n     console.  log  (response)\n   }\n   \u003C/  script  >\n   \n   \u003C  template  >\n     \u003C  div  >\n       \u003C  button   @  click  =  \"  onSubmit  \"  >\n         submit\n       \u003C/  button  >\n     \u003C/  div  >\n   \u003C/  template  >\n  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":116,"path":117,"dir":118,"title":119,"description":120,"keywords":121,"body":123},"content:4.advanced:0.customize-recaptcha-script-loading.md","/advanced/customize-recaptcha-script-loading","advanced","Customize reCAPTCHA script loading","By default vue-recaptcha will use unhead to load the reCAPTCHA script.",[122],"The defineScriptLoader function and ScriptLoaderOptions","  Customize reCAPTCHA script loading  By default vue-recaptcha will use   unhead  to load the reCAPTCHA script.  If you need to completely control how to load the reCAPTCHA script. You can use   createPlugin  to create a plugin with your own   loadScript  function.     import   { onMounted }   from   'vue'\n   import   { defineScriptLoader, toQueryString }   from   'vue-recaptcha'\n   \n   // Define your own loadScript function\n   const   loadScript   =   defineScriptLoader  ((  options  )   =>   {\n     // This function will be called by useRecaptchaProvider\n     return   ()   =>   {\n       onMounted  (()   =>   {\n         // You can use any way to load the reCAPTCHA script\n         const   script   =   document.  createElement  (  'script'  )\n         script.src   =   `${  options  .  recaptchaApiURL  }?${  toQueryString  (  options  .  params  )  }`\n         script.async   =   true\n         script.defer   =   true\n         if   (options.nonce)\n           script.nonce   =   options.nonce\n   \n         document.head.  append  (script)\n       })\n     }\n   })\n   \n   const   plugin   =   createPlugin  (loadScript)\n  The   defineScriptLoader  function and   ScriptLoaderOptions     export   interface   RecaptchaParams   {\n     // You must pass these two value as query string to reCAPTCHA\n     render  :   LiteralUnion  \u003C  'explicit'  ,   string  >\n     onload  :   string\n   \n     // Below you can customize as you want\n     hl  ?:   string   |   undefined\n     trustedtypes  ?:   'true'   |   undefined\n     [k: string]  :   string   |   undefined\n   }\n   \n   export   interface   ScriptLoaderOptions   {\n     /**\n      * you can use recaptcha.net instead of google.com, if you set recaptchaApiURL, this option will be ignored\n      */\n     useRecaptchaNet  ?:   boolean\n     /**\n      * you can use your own recaptcha api url, if you set this option, useRecaptchaNet will be ignored\n      */\n     recaptchaApiURL  :   string\n     /**\n      * nonce for script tag\n      */\n     nonce  ?:   string\n     /**\n      * params for recaptcha api\n      */\n     params  :   RecaptchaParams\n   }\n   \n   /**\n    *  Helper function for define your own loadScript function\n    */\n   function   defineScriptLoader  (  fn  :   ScriptLoaderFactory  )  :   NormalizedScriptLoaderFactory\n  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":125,"path":126,"dir":127,"title":128,"description":129,"keywords":130,"body":133},"content:5.integration:0.vee-validation.md","/integration/vee-validation","integration","Vee Validation","Vee Validate is a plugin for form validation.",[131,132],"Confirm user has clicked the checkbox before submit","Execute challenge when user submit form","  Vee Validation   Vee Validate  is a plugin for form validation.  Confirm user has clicked the checkbox before submit        \u003C  script   setup   lang  =  \"ts\"  >\n   import   { useField, useForm }   from   'vee-validate'\n   import   *   as   yup   from   'yup'\n   \n   const   {   handleSubmit   }   =   useForm  ({\n     validationSchema: yup.  object  ({\n       name: yup.  string  ().  required  (),\n       recaptcha: yup.  string  ().  required  (  'Please verify you are human'  ),\n     }),\n   })\n   \n   const   {   value  :   nameValue  ,   errorMessage  :   nameError   }   =   useField  (  'name'  )\n   const   {   value  :   recaptchaValue  ,   errorMessage  :   recaptchaError   }   =   useField  \u003C  string  >(  'recaptcha'  )\n   \n   const   onSubmit   =   handleSubmit  ((  values  )   =>   {\n     console.  log  (values)\n   })\n   \u003C/  script  >\n   \n   \u003C  template  >\n     \u003C  form   class  =  \"flex flex-col gap-2\"   @  submit  =  \"  onSubmit  \"  >\n       \u003C  div  >\n         \u003C  input   v-model  =  \"  nameValue  \"   class  =  \"border border-blue p-1\"   type  =  \"text\"   placeholder  =  \"Your name\"  >\n         \u003C  div   v-if  =  \"  nameError  \"   class  =  \"text-red\"  >\n           {{ nameError }}\n         \u003C/  div  >\n       \u003C/  div  >\n       \u003C  div  >\n         \u003C  RecaptchaCheckbox   v-model  =  \"  recaptchaValue  \"   />\n         \u003C  div   v-if  =  \"  recaptchaError  \"   class  =  \"text-red\"  >\n           {{ recaptchaError }}\n         \u003C/  div  >\n       \u003C/  div  >\n       \u003C  div  >\n         \u003C  PrimaryButton   type  =  \"submit\"  >\n           Submit\n         \u003C/  PrimaryButton  >\n       \u003C/  div  >\n     \u003C/  form  >\n   \u003C/  template  >\n  Execute challenge when user submit form        \u003C  script   setup   lang  =  \"ts\"  >\n   import   { useField, useForm }   from   'vee-validate'\n   import   *   as   yup   from   'yup'\n   import   { until }   from   '@vueuse/core'\n   \n   const   {   handleSubmit   }   =   useForm  ({\n     validationSchema: yup.  object  ({\n       name: yup.  string  ().  required  (),\n     }),\n   })\n   \n   const   {   value  :   nameValue  ,   errorMessage  :   nameError   }   =   useField  (  'name'  )\n   \n   const   response   =   ref  ()\n   \n   const   onSubmit   =   handleSubmit  (  async   (  values  )   =>   {\n     await   until  (response).  changed  ()\n     console.  log  ({   ...  values, response: response.value })\n   })\n   \u003C/  script  >\n   \n   \u003C  template  >\n     \u003C  form   class  =  \"flex flex-col gap-2\"   @  submit  =  \"  onSubmit  \"  >\n       \u003C  div  >\n         \u003C  input   v-model  =  \"  nameValue  \"   class  =  \"border border-blue p-1\"   type  =  \"text\"   placeholder  =  \"Your name\"  >\n         \u003C  div   v-if  =  \"  nameError  \"   class  =  \"text-red\"  >\n           {{ nameError }}\n         \u003C/  div  >\n       \u003C/  div  >\n       \u003C  div  >\n         \u003C  RecaptchaChallengeV2   v-model  =  \"  response  \"  >\n           \u003C  PrimaryButton   type  =  \"submit\"  >\n             Submit\n           \u003C/  PrimaryButton  >\n         \u003C/  RecaptchaChallengeV2  >\n       \u003C/  div  >\n     \u003C/  form  >\n   \u003C/  template  >\n  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",1722042294820]